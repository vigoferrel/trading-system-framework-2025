
// Constantes fÃ­sicas reales del sistema
const PHYSICAL_CONSTANTS = {
  "QUANTUM_COHERENCE": 0.75,
  "QUANTUM_CONSCIOUSNESS": 0.8,
  "QUANTUM_ENTANGLEMENT": 0.65,
  "QUANTUM_SUPERPOSITION": 0.7,
  "QUANTUM_TUNNELING": 0.6,
  "MARKET_VOLATILITY": 0.05,
  "MARKET_MOMENTUM": 0.1,
  "MARKET_LIQUIDITY": 0.75,
  "MARKET_SPREAD": 0.001,
  "MARKET_DEPTH": 500000,
  "FUNDING_RATE": 0.02,
  "FUNDING_VOLATILITY": 0.01,
  "FUNDING_DEVIATION": 0.5,
  "FUNDING_ANNUALIZED": 5,
  "LIQUIDATION_PROBABILITY": 0.05,
  "SLIPPAGE_RATE": 0.0025,
  "VOLATILITY_RISK": 0.1,
  "EXECUTION_RISK": 0.005,
  "VOLUME_24H": 500000,
  "VOLUME_RATIO": 0.75,
  "VOLUME_EXPANSION": 300000,
  "PRICE_CHANGE": 0.02,
  "PRICE_ACCELERATION": 0.015,
  "PRICE_MOMENTUM": 0.01,
  "TIME_TO_FUNDING": 1800000,
  "SESSION_INTENSITY": 0.6,
  "TEMPORAL_RESONANCE": 0.7,
  "FIBONACCI_STRENGTH": 0.75,
  "FIBONACCI_INDEX": 5,
  "NEURAL_CONFIDENCE": 0.85,
  "NEURAL_COHERENCE": 0.8,
  "NEURAL_ENTANGLEMENT": 0.7,
  "BASE_LEVERAGE": 15,
  "CONSERVATIVE_LEVERAGE": 10,
  "AGGRESSIVE_LEVERAGE": 25,
  "STOP_LOSS": 0.03,
  "TAKE_PROFIT": 0.06,
  "BASE_SCORE": 0.65,
  "CONFIDENCE_SCORE": 0.75,
  "QUALITY_SCORE": 0.8
};

/**
 * Test Frontend Endpoints - VerificaciÃ³n Completa del Sistema
 */

const BASE_URL = 'http://localhost:4603';

async function testEndpoint(endpoint, description) {
    try {
        const response = await fetch(`${BASE_URL}${endpoint}`);
        const data = await response.json();
        
        if (response.ok) {
            console.log(`[OK] ${description}: OK`);
            return true;
        } else {
            console.log(`[ERROR] ${description}: Error ${response.status}`);
            return false;
        }
    } catch (error) {
        console.log(`[ERROR] ${description}: ${error.message}`);
        return false;
    }
}

async function testAllEndpoints() {
    console.log('[NIGHT] Iniciando pruebas del Frontend Server Simplificado...\n');
    
    const endpoints = [
        { path: '/api/status', desc: 'Status del Sistema' },
        { path: '/api/market-data', desc: 'Datos de Mercado' },
        { path: '/api/quantum-factors?symbol=BTCUSDT', desc: 'Factores CuÃ¡nticos' },
        { path: '/api/quantum-state', desc: 'Estado CuÃ¡ntico' },
        { path: '/api/quantum-matrix', desc: 'Matriz CuÃ¡ntica' },
        { path: '/api/performance', desc: 'MÃ©tricas de Rendimiento' },
        { path: '/api/alerts', desc: 'Alertas del Sistema' },
        { path: '/api/admin/overview', desc: 'Vista General Admin' },
        { path: '/api/market-sparkline?symbol=BTCUSDT', desc: 'Sparkline de Mercado' },
        { path: '/api/orderbook?symbol=BTCUSDT', desc: 'Orderbook' },
        { path: '/api/klines?symbol=BTCUSDT', desc: 'Klines/Candlestick' },
        { path: '/api/cache/performance', desc: 'Performance del Cache' }
    ];
    
    let successCount = 0;
    let totalCount = endpoints.length;
    
    for (const endpoint of endpoints) {
        const success = await testEndpoint(endpoint.path, endpoint.desc);
        if (success) successCount++;
        await new Promise(resolve => setTimeout(resolve, 100)); // PequeÃ±a pausa
    }
    
    console.log(`\n[DATA] Resultados de las Pruebas:`);
    console.log(`[OK] Exitosos: ${successCount}/${totalCount}`);
    console.log(`[ERROR] Fallidos: ${totalCount - successCount}/${totalCount}`);
    console.log(`[UP] Tasa de Ã©xito: ${((successCount/totalCount)*100).toFixed(1)}%`);
    
    if (successCount === totalCount) {
        console.log('\nðŸŽ‰ Â¡TODOS LOS ENDPOINTS FUNCIONAN PERFECTAMENTE!');
        console.log('[NIGHT] Sistema CuÃ¡ntico Simplificado - OPERATIVO');
    } else {
        console.log('\n[WARNING] Algunos endpoints tienen problemas');
    }
}

// Ejecutar pruebas
testAllEndpoints().catch(console.error);
