#!/usr/bin/env python3
"""
SCRIPT DE PRUEBA DE CONECTIVIDAD
"""

import asyncio
import aiohttp
import time
from datetime import datetime

ENDPOINTS = [
    {"name": "QBTC Health", "url": "http://localhost:4602/health"},
    {"name": "QBTC Spot Data", "url": "http://localhost:4602/api/spot-data"},
    {"name": "QBTC Futures Data", "url": "http://localhost:4602/api/futures-data"},
    {"name": "QBTC Quantum Metrics", "url": "http://localhost:4602/api/quantum-metrics"},
    {"name": "SRONA Options", "url": "http://localhost:4601/api/options-data"},
    {"name": "Frontend Status", "url": "http://localhost:4603/api/status"}
]

async def test_endpoint(session, endpoint):
    start_time = time.time()
    try:
        async with session.get(endpoint["url"], timeout=10) as response:
            response_time = time.time() - start_time
            if response.status == 200:
                print(f"‚úÖ {endpoint['name']}: OK ({response_time:.2f}s)")
                return True
            else:
                print(f"‚ö†Ô∏è {endpoint['name']}: Status {response.status}")
                return False
    except Exception as e:
        print(f"‚ùå {endpoint['name']}: ERROR - {str(e)}")
        return False

async def test_all():
    print("üîç PRUEBA DE CONECTIVIDAD")
    print("=" * 50)
    
    async with aiohttp.ClientSession() as session:
        results = []
        for endpoint in ENDPOINTS:
            success = await test_endpoint(session, endpoint)
            results.append(success)
            await asyncio.sleep(0.5)
        
        successful = sum(results)
        total = len(results)
        print(f"\nüìä RESUMEN: {successful}/{total} exitosos ({(successful/total)*100:.1f}%)")

if __name__ == "__main__":
    asyncio.run(test_all())
