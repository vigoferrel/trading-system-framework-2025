
// Constantes f√≠sicas reales del sistema
const PHYSICAL_CONSTANTS = {
  "QUANTUM_COHERENCE": 0.75,
  "QUANTUM_CONSCIOUSNESS": 0.8,
  "QUANTUM_ENTANGLEMENT": 0.65,
  "QUANTUM_SUPERPOSITION": 0.7,
  "QUANTUM_TUNNELING": 0.6,
  "MARKET_VOLATILITY": 0.05,
  "MARKET_MOMENTUM": 0.1,
  "MARKET_LIQUIDITY": 0.75,
  "MARKET_SPREAD": 0.001,
  "MARKET_DEPTH": 500000,
  "FUNDING_RATE": 0.02,
  "FUNDING_VOLATILITY": 0.01,
  "FUNDING_DEVIATION": 0.5,
  "FUNDING_ANNUALIZED": 5,
  "LIQUIDATION_PROBABILITY": 0.05,
  "SLIPPAGE_RATE": 0.0025,
  "VOLATILITY_RISK": 0.1,
  "EXECUTION_RISK": 0.005,
  "VOLUME_24H": 500000,
  "VOLUME_RATIO": 0.75,
  "VOLUME_EXPANSION": 300000,
  "PRICE_CHANGE": 0.02,
  "PRICE_ACCELERATION": 0.015,
  "PRICE_MOMENTUM": 0.01,
  "TIME_TO_FUNDING": 1800000,
  "SESSION_INTENSITY": 0.6,
  "TEMPORAL_RESONANCE": 0.7,
  "FIBONACCI_STRENGTH": 0.75,
  "FIBONACCI_INDEX": 5,
  "NEURAL_CONFIDENCE": 0.85,
  "NEURAL_COHERENCE": 0.8,
  "NEURAL_ENTANGLEMENT": 0.7,
  "BASE_LEVERAGE": 15,
  "CONSERVATIVE_LEVERAGE": 10,
  "AGGRESSIVE_LEVERAGE": 25,
  "STOP_LOSS": 0.03,
  "TAKE_PROFIT": 0.06,
  "BASE_SCORE": 0.65,
  "CONFIDENCE_SCORE": 0.75,
  "QUALITY_SCORE": 0.8
};

const axios = require('axios');

async function testBinanceSymbols() {
    try {
        console.log('üîç Verificando s√≠mbolos reales de Binance Futures...');
        
        // Obtener datos de la API de Binance Futures
        const response = await axios.get('https://fapi.binance.com/fapi/v1/ticker/24hr');
        
        if (response.data && Array.isArray(response.data)) {
            console.log(`üìä Total de s√≠mbolos recibidos: ${response.data.length}`);
            
            // Filtrar solo s√≠mbolos USDT
            const usdtSymbols = response.data.filter(item => item.symbol.endsWith('USDT'));
            console.log(`üìà S√≠mbolos USDT encontrados: ${usdtSymbols.length}`);
            
            // Verificar algunos s√≠mbolos problem√°ticos
            const problematicSymbols = ['BNXUSDT', 'ASRUSDT', 'BANDUSDT', 'MYXUSDT', 'EPTUSDT', 'VIDTUSDT'];
            
            console.log('\nüîç Verificando s√≠mbolos problem√°ticos:');
            problematicSymbols.forEach(symbol => {
                const found = usdtSymbols.find(item => item.symbol === symbol);
                if (found) {
                    console.log(`‚ùå ${symbol} - ENCONTRADO (precio: $${found.lastPrice})`);
                } else {
                    console.log(`‚úÖ ${symbol} - NO ENCONTRADO`);
                }
            });
            
            // Mostrar algunos s√≠mbolos reales
            console.log('\n‚úÖ Primeros 10 s√≠mbolos reales:');
            usdtSymbols.slice(0, 10).forEach(item => {
                console.log(`  ${item.symbol}: $${item.lastPrice} (${item.priceChangePercent}%)`);
            });
            
            // Verificar si hay s√≠mbolos con precios sospechosos
            console.log('\nüö® S√≠mbolos con precios sospechosos:');
            usdtSymbols.forEach(item => {
                const price = parseFloat(item.lastPrice);
                if (price === 0 || price < 0.0001 || price > 100000) {
                    console.log(`  ${item.symbol}: $${item.lastPrice} (sospechoso)`);
                }
            });
            
        } else {
            console.log('‚ùå No se recibieron datos v√°lidos de Binance');
        }
        
    } catch (error) {
        console.error('‚ùå Error verificando s√≠mbolos:', error.message);
    }
}

testBinanceSymbols();
