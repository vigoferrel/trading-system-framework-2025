# Bot de Futuros QBTC - Sistema Tandalones

Bot de trading de futuros de criptomonedas completamente independiente con optimizaci√≥n cu√°ntica Feynman.

## Caracter√≠sticas

- üöÄ **Sistema Tandalones**: Funciona de forma independiente sin dependencias externas
- üß† **Optimizaci√≥n Cu√°ntica**: Implementa algoritmos Feynman para maximizar beneficios
- üíπ **Integraci√≥n con Binance**: Conexi√≥n directa con la API de Binance Futures
- ‚ö° **Alto Rendimiento**: Optimizado para operaciones de alta frecuencia
- üîí **Seguro**: Implementa stop-loss y take-profit autom√°ticos
- üìä **Monitoreo en Tiempo Real**: API REST para monitoreo y control
- üåô **Cara Oculta Lunar**: Optimizaci√≥n temporal basada en patrones lunares

## Requisitos

- Node.js >= 16.0.0
- npm >= 8.0.0
- Cuenta de Binance con API keys

## Instalaci√≥n

1. Clonar o descargar el directorio `bot-futuros`
2. Navegar al directorio del proyecto:
   ```bash
   cd bot-futuros
   ```
3. Instalar dependencias:
   ```bash
   npm install
   ```
4. Configurar variables de entorno:
   ```bash
   copy .env-example .env
   ```
5. Editar el archivo `.env` con tus credenciales de Binance:
   ```
   BINANCE_API_KEY=tu_api_key_de_binance_aqui
   BINANCE_API_SECRET=tu_api_secret_de_binance_aqui
   BINANCE_TESTNET=true
   ```

## Uso

### Iniciar el Bot

#### M√©todo 1: Instalar dependencias y lanzar (Recomendado para primera vez)
```bash
INSTALL-AND-LAUNCH.bat
```

#### M√©todo 2: Usando el script de lanzamiento (Si dependencias ya est√°n instaladas)
```bash
LAUNCH-BOT-TANDALONES.bat
```

#### M√©todo 3: Usando npm (si npm est√° en el PATH)
```bash
npm start
```

#### M√©todo 4: Usando Node.js directamente
```bash
"C:\Program Files\nodejs\node.exe" server.js
```

### Modo Desarrollo
```bash
npm run dev
```

## Configuraci√≥n

El bot se configura principalmente a trav√©s del archivo `.env`. Las opciones principales son:

### Configuraci√≥n del Servidor
- `SERVER_PORT`: Puerto del servidor (default: 5500)
- `SERVER_HOST`: Host del servidor (default: localhost)

### Configuraci√≥n de Trading
- `TRADING_PAIRS`: Pares de trading separados por comas (ej: BTCUSDT,ETHUSDT)
- `TRADING_LEVERAGE`: Apalancamiento m√°ximo (default: 20)
- `TRADING_MARGIN_TYPE`: Tipo de margen (ISOLATED/CROSSED)
- `TRADING_STOP_LOSS_PERCENT`: Porcentaje de stop-loss (default: 2.5)
- `TRADING_TAKE_PROFIT_PERCENT`: Porcentaje de take-profit (default: 5.0)

### Configuraci√≥n Cu√°ntica
- `QUANTUM_MIN_EDGE`: Edge m√≠nimo para operaciones (default: 0.0025)
- `QUANTUM_MIN_CONFIDENCE`: Confianza m√≠nima (default: 0.75)
- `QUANTUM_LEVERAGE_MULTIPLIER`: Multiplicador de apalancamiento cu√°ntico (default: 1.618)
- `QUANTUM_ZURITA_MULTIPLIER`: Multiplicador de Zurita (default: 7919)

## API Endpoints

### Estado del Bot
- `GET /api/status` - Estado general del bot
- `GET /health` - Health check del sistema

### Trading
- `POST /api/execute-quantum-trade` - Ejecutar operaci√≥n cu√°ntica
- `GET /api/positions` - Obtener posiciones activas
- `GET /api/balance` - Obtener balance actual

### M√©tricas
- `GET /api/quantum-metrics` - Obtener m√©tricas cu√°nticas
- `GET /api/market-data/:symbol` - Obtener datos de mercado
- `GET /api/opportunities` - Obtener oportunidades detectadas

## Arquitectura del Sistema

El bot est√° compuesto por los siguientes m√≥dulos principales:

### Core Modules
- `server.js` - Servidor Express y API REST
- `config.js` - Configuraci√≥n del sistema
- `init.js` - Inicializaci√≥n del sistema
- `quantum-optimizer.js` - Optimizador cu√°ntico Feynman
- `binance-trader.js` - Trader de Binance Futures

### Caracter√≠sticas T√©cnicas

#### Optimizaci√≥n Cu√°ntica
- Implementa cuadrantes Feynman para maximizar beneficios
- Usa frecuencia Lambda de 888MHz para resonancia cu√°ntica
- Aplica factor logar√≠tmico primo (log 7919)
- Implementa ventaja temporal basada en cara oculta lunar

#### Gesti√≥n de Riesgos
- Stop-loss autom√°tico
- Take-profit autom√°tico
- Gesti√≥n din√°mica de apalancamiento
- Diversificaci√≥n de posiciones

#### Monitoreo
- Logging completo de operaciones
- M√©tricas en tiempo real
- Sistema de health check
- API REST para monitoreo externo

## Ejemplo de Uso

### Verificar estado del bot
```bash
curl http://localhost:5500/api/status
```

### Ejecutar operaci√≥n manual
```bash
curl -X POST http://localhost:5500/api/execute-quantum-trade \
  -H "Content-Type: application/json" \
  -d '{"symbol": "BTCUSDT", "side": "BUY", "size": 10}'
```

### Obtener posiciones activas
```bash
curl http://localhost:5500/api/positions
```

## Seguridad

- Las API keys de Binance se almacenan de forma segura en variables de entorno
- El bot funciona en modo testnet por defecto para pruebas
- Implementa validaci√≥n de firmas para todas las operaciones
- Logging seguro sin exposici√≥n de datos sensibles

## Troubleshooting

### Problemas Comunes

1. **Error: Cannot find module**
   - Aseg√∫rate de ejecutar `npm install` en el directorio del proyecto

2. **Error: BINANCE_API_KEY not configured**
   - Configura tus API keys en el archivo `.env`

3. **Error: Port already in use**
   - Cambia el puerto en el archivo `.env` (SERVER_PORT)

4. **Error: Connection refused**
   - Verifica tu conexi√≥n a internet y las credenciales de Binance

### Logs

Los logs del sistema se almacenan en el directorio `logs/`:
- Logs del servidor: `logs/server.log`
- Logs de trading: `logs/trading.log`
- Logs de errores: `logs/error.log`

## Contribuir

1. Fork el proyecto
2. Crea tu feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit tus cambios (`git commit -m 'Add some AmazingFeature'`)
4. Push a la branch (`git push origin feature/AmazingFeature`)
5. Open un Pull Request

## Licencia

Este proyecto est√° licenciado bajo la Licencia MIT - ver el archivo [LICENSE](LICENSE) para detalles.

## Soporte

Si tienes problemas o preguntas, por favor:
1. Revisa la secci√≥n de Troubleshooting
2. Abre un issue en el repositorio
3. Contacta al equipo de QBTC

## Descargo de Responsabilidad

Este bot de trading es para fines educativos y de investigaci√≥n. El trading de criptomonedas conlleva riesgos significativos y puede no ser adecuado para todos los inversores. Usa este bot bajo tu propio riesgo.